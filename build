#!/bin/bash

declare -A config
config=(
  ["--mode"]="dev"
  ["--tw-local"]=false
  ["--tw-watch"]=false
)

while read argument; do
  key=$(echo "$argument" | awk '{split($0, a, "="); print a[1]}')
  if [ -z "$key" ]; then
    continue
  fi
  value=$(echo "$argument" | awk '{st = index($0, "="); print substr($0, st + 1)}')
  if [[ "$value" == "$key" ]]; then
    value="true"
  fi
  config["$key"]=$value
done <<< $(echo "$@" | tr " " "\n")

print() {
  printf "%-8s %s\n" $1 $2
}

section() {
  echo ""
  printf "%2s%-48s" "" $1 | tr ' ' '-'
  printf "\n"
}

MODE="${config["--mode"]}"

if [[ "$MODE" != "dev" ]] && [[ "$MODE" != "prod" ]]; then
  echo "[ERROR] invalid mode '$MODE'!"
  exit 1
fi

section "INFO"
print "mode" $MODE

if [[ -z "$VERSION" ]]; then
  VERSION=$(git log --format="%h" -n 1)
fi

print "version" $VERSION

DIST_DIR="dist"

if [[ -d "$DIST_DIR" ]]; then
  section "CLEAN"
  rm -rf "$DIST_DIR"
  print "remove" "$DIST_DIR/"
fi

if [[ "$MODE" == "dev" ]]; then
  section "LINK"
  print "create" "$DIST_DIR/"
  mkdir -p "$DIST_DIR"
  print "link" "$DIST_DIR/app/"
  ln -sf "../app" "$DIST_DIR/app"
  print "link" "$DIST_DIR/www/"
  ln -sf "../www" "$DIST_DIR/www"
fi
if [[ "$MODE" == "prod" ]]; then
  section "COPY"
  print "create" "$DIST_DIR/"
  mkdir -p "$DIST_DIR"
  print "copy" "$DIST_DIR/app/"
  cp -rf app "$DIST_DIR/app"
  print "copy" "$DIST_DIR/www/"
  cp -rf www "$DIST_DIR/www"
fi

if [[ "$MODE" == "prod" ]]; then
  section "INJECT"

  sed -i -e "s/{{version}}/$VERSION/g" "$DIST_DIR/www/worker.js"
  print "inject" "$DIST_DIR/www/worker.js"
  sed -i -e "s/{{version}}/$VERSION/g" "$DIST_DIR/app/main.js"
  print "inject" "$DIST_DIR/app/main.js"
fi

LIB_DIR="$DIST_DIR/www/asset/lib"
FONT_DIR="$DIST_DIR/www/asset/font"

section "DEPS"

print "create" "$LIB_DIR/"
mkdir -p "$LIB_DIR"
print "create" "$FONT_DIR/"
mkdir -p "$FONT_DIR"

TW_LOCAL="${config["--tw-local"]}"

# tailwindcss
if [[ "$TW_LOCAL" == "false" ]]; then
  print "download" "tailwindcss"
  curl -sL https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64 -o "$DIST_DIR/tailwindcss"
  chmod +x "$DIST_DIR/tailwindcss"
fi

# vue
print "download" "vue"
curl -sL https://cdn.jsdelivr.net/npm/vue@2/dist/vue.esm.browser.min.js -o "$LIB_DIR/vue.min.js"
# curl -L https://unpkg.com/vue@latest/dist/vue.esm-browser.prod.js -o ./www/asset/lib/vue.min.js -s

# tabler-icons
print "download" "tabler-icons"
curl -sL https://cdn.jsdelivr.net/npm/@tabler/icons@latest/iconfont/tabler-icons.min.css -o "$LIB_DIR/tabler-icons.min.css"
sed -i -e "s/fonts\/tabler-icons/..\/font\/tabler-icons/g" "$LIB_DIR/tabler-icons.min.css"
print "download" "tabler-icons-font"
curl -sL https://cdn.jsdelivr.net/npm/@tabler/icons@latest/iconfont/fonts/tabler-icons.eot -o "$FONT_DIR/tabler-icons.eot"
curl -sL https://cdn.jsdelivr.net/npm/@tabler/icons@latest/iconfont/fonts/tabler-icons.ttf -o "$FONT_DIR/tabler-icons.ttf"
curl -sL https://cdn.jsdelivr.net/npm/@tabler/icons@latest/iconfont/fonts/tabler-icons.woff -o "$FONT_DIR/tabler-icons.woff"
curl -sL https://cdn.jsdelivr.net/npm/@tabler/icons@latest/iconfont/fonts/tabler-icons.woff2 -o "$FONT_DIR/tabler-icons.woff2"

# inter
print "download" "inter-font"
curl -sL https://fonts.google.com/download?family=Inter -o "$FONT_DIR/inter.zip"
unzip -qq "$FONT_DIR/inter.zip" -d "$FONT_DIR/inter"
mv "$FONT_DIR/inter/static/Inter-Regular.ttf" "$FONT_DIR/"
mv "$FONT_DIR/inter/static/Inter-Medium.ttf" "$FONT_DIR/"
mv "$FONT_DIR/inter/static/Inter-SemiBold.ttf" "$FONT_DIR/"
rm -rf "$FONT_DIR/inter"
rm -rf "$FONT_DIR/inter.zip"

section "BUILD"

TW_BIN="$DIST_DIR/tailwindcss"
TW_WATCH="${config["--tw-watch"]}"

if [[ "$TW_LOCAL" == "true" ]]; then
  TW_BIN="tailwindcss"
fi

if [[ "$TW_WATCH" == "true" ]]; then
  print "watch" "tailwindcss"
  WATCH_FLAG="--watch"
else
  print "build" "tailwindcss"
fi

"$TW_BIN" -c tailwind.config.js -i "$DIST_DIR/www/asset/css/input.css" -o "$DIST_DIR/www/asset/css/output.css" --minify "$WATCH_FLAG"

STATUS="$?"

section

if [[ "$STATUS" != "0" ]]; then
  print "status" "failed"
  echo ""
  exit 1
fi

print "status" "success"
echo ""
